/*
Problem 2 from Project Euler.  http://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
)

func evenFibs() func() int {
	a := 1
	b := 1

	return func() int {
		// Calculate the next even number
		nextEven := a + b
		a = b
		b = nextEven

		// Calculate the next two numbers which will both be odd
		nextOdd := a + b
		a = b
		b = nextOdd
		nextOdd = a + b
		a = b
		b = nextOdd

		return nextEven
	}
}

func main() {
	evens := evenFibs()
	limit := 4000000
	sum := 0

	for num := evens(); num < limit; {
		sum += num
		num = evens()
	}

	fmt.Println(sum)
}
